{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet EventosComponent = class EventosComponent {\n  get filtroLitsta() {\n    return this.filtroListado;\n  }\n  set filtroLitsta(value) {\n    this.filtroListado = value;\n    this.eventosFltrados = this.filtroLitsta ? this.filtroEventos(this.filtroLitsta) : this.eventos;\n  }\n  filtroEventos(filtroPor) {\n    filtroPor = filtroPor.toLocaleLowerCase();\n    return this.eventos.filter(evento => evento.tema.toLocaleLowerCase().indexOf(filtroPor) !== -1 || evento.local.toLocaleLowerCase().indexOf(filtroPor) !== -1);\n  }\n  constructor(eventoService, modalService, toastr, spinner) {\n    this.eventoService = eventoService;\n    this.modalService = modalService;\n    this.toastr = toastr;\n    this.spinner = spinner;\n    this.eventos = [];\n    this.eventosFltrados = [];\n    this.widthImg = 150;\n    this.marginImg = 2;\n    this.exibirImagem = true;\n    this.filtroListado = '';\n  }\n  alterarImagem() {\n    this.exibirImagem = !this.exibirImagem;\n  }\n  ngOnInit() {\n    this.spinner.show();\n    this.getEventos();\n    /* setTimeout(() => {\r\n       this.spinner.hide();\r\n        \r\n     }, 5000); */\n  }\n  // public getEventos(): void{\n  // this.eventoService.getEventos().subscribe(\n  //   (eventosResp: Evento[]) => {\n  //   this.eventos = eventosResp\n  //  this.eventosFltrados = this.eventos;\n  // },\n  // error => console.log(error)\n  //);\n  //}\n  getEventos() {\n    /* const observer = {\r\n       next:(eventos: Evento[]) => {\r\n         this.eventos = eventos;\r\n         this.eventosFltrados =this.eventos;\r\n       },\r\n       error: (error: any) => {\r\n         this.spinner.hide();\r\n         this.toastr.error('Erro ao carregar os eventos', 'Error!');\r\n       },\r\n      // complete: () => this.spinner.hide()\r\n     };\r\n            */\n    this.eventoService.getEventos().subscribe({\n      next: eventos => {\n        this.eventos = eventos;\n        this.eventosFltrados = this.eventos;\n      },\n      error: error => {\n        this.spinner.hide();\n        this.toastr.error('Erro ao carregar os eventos', 'Error!');\n      },\n      complete: () => this.spinner.hide()\n    });\n  }\n  openModal(template) {\n    this.modalRef = this.modalService.show(template, {\n      class: 'modal-lg'\n    });\n  }\n  confirma() {\n    this.modalRef?.hide();\n    this.toastr.success('Evento deletado com sucesso.', 'Deletado');\n  }\n  decline() {\n    this.modalRef?.hide();\n  }\n};\nEventosComponent = __decorate([Component({\n  selector: 'app-eventos',\n  templateUrl: './eventos.component.html',\n  styleUrls: ['./eventos.component.scss']\n})], EventosComponent);\nexport { EventosComponent };","map":{"version":3,"mappings":";AACA,SAASA,SAAS,QAAqB,eAAe;AAc/C,IAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAU3B,IAAWC,YAAY;IACpB,OAAO,IAAI,CAACC,aAAa;EAC5B;EAEA,IAAWD,YAAY,CAACE,KAAa;IAClC,IAAI,CAACD,aAAa,GAAGC,KAAK;IAC1B,IAAI,CAACC,eAAe,GAAG,IAAI,CAACH,YAAY,GAAG,IAAI,CAACI,aAAa,CAAC,IAAI,CAACJ,YAAY,CAAC,GAAG,IAAI,CAACK,OAAO;EAClG;EAEOD,aAAa,CAACE,SAAiB;IACnCA,SAAS,GAAGA,SAAS,CAACC,iBAAiB,EAAE;IACzC,OAAO,IAAI,CAACF,OAAO,CAACG,MAAM,CACrBC,MAAoC,IAAMA,MAAM,CAACC,IAAI,CAACH,iBAAiB,EAAE,CAACI,OAAO,CAACL,SAAS,CAAC,KAAK,CAAC,CAAC,IACpGG,MAAM,CAACG,KAAK,CAACL,iBAAiB,EAAE,CAACI,OAAO,CAACL,SAAS,CAAC,KAAK,CAAC,CAAC,CAE7D;EACJ;EAEAO,YAAoBC,aAA4B,EACtCC,YAA4B,EAC5BC,MAAqB,EACrBC,OAA0B;IAHhB,kBAAa,GAAbH,aAAa;IACvB,iBAAY,GAAZC,YAAY;IACZ,WAAM,GAANC,MAAM;IACN,YAAO,GAAPC,OAAO;IA7BV,YAAO,GAAa,EAAE;IACtB,oBAAe,GAAa,EAAE;IACrC,aAAQ,GAAG,GAAG;IACd,cAAS,GAAG,CAAC;IACb,iBAAY,GAAG,IAAI;IACX,kBAAa,GAAG,EAAE;EAwBc;EAGjCC,aAAa;IACjB,IAAI,CAACC,YAAY,GAAG,CAAC,IAAI,CAACA,YAAY;EACzC;EAEOC,QAAQ;IACb,IAAI,CAACH,OAAO,CAACI,IAAI,EAAE;IACnB,IAAI,CAACC,UAAU,EAAE;IAElB;;;;EAKD;EAGD;EACE;EACE;EACE;EACC;EAED;EACA;EACH;EACF;EAEOA,UAAU;IAChB;;;;;;;;;;;;IAcC,IAAI,CAACR,aAAa,CAACQ,UAAU,EAAE,CAACC,SAAS,CAAC;MACxCC,IAAI,EAAEnB,OAAiB,IAAI;QACzB,IAAI,CAACA,OAAO,GAAGA,OAAO;QACtB,IAAI,CAACF,eAAe,GAAE,IAAI,CAACE,OAAO;MACpC,CAAC;MACDoB,KAAK,EAAGA,KAAU,IAAI;QACpB,IAAI,CAACR,OAAO,CAACS,IAAI,EAAE;QACnB,IAAI,CAACV,MAAM,CAACS,KAAK,CAAC,6BAA6B,EAAE,QAAQ,CAAC;MAC5D,CAAC;MACAE,QAAQ,EAAE,MAAM,IAAI,CAACV,OAAO,CAACS,IAAI;KACnC,CAAC;EACJ;EAEAE,SAAS,CAACC,QAA0B;IAClC,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACf,YAAY,CAACM,IAAI,CAACQ,QAAQ,EAAE;MAAEE,KAAK,EAAE;IAAU,CAAE,CAAC;EAEzE;EAEAC,QAAQ;IACL,IAAI,CAACF,QAAQ,EAAEJ,IAAI,EAAE;IACrB,IAAI,CAACV,MAAM,CAACiB,OAAO,CAAC,8BAA8B,EAAE,UAAU,CAAC;EAClE;EAEAC,OAAO;IACL,IAAI,CAACJ,QAAQ,EAAEJ,IAAI,EAAE;EACxB;CAGA;AAxGY3B,gBAAgB,eAN5BD,SAAS,CAAC;EACTqC,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,0BAA0B;CAEvC,CAAC,GACWtC,gBAAgB,CAwG5B;SAxGYA,gBAAgB","names":["Component","EventosComponent","filtroLitsta","filtroListado","value","eventosFltrados","filtroEventos","eventos","filtroPor","toLocaleLowerCase","filter","evento","tema","indexOf","local","constructor","eventoService","modalService","toastr","spinner","alterarImagem","exibirImagem","ngOnInit","show","getEventos","subscribe","next","error","hide","complete","openModal","template","modalRef","class","confirma","success","decline","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Cleiton Cristovam\\Desktop\\Cursos Udemy\\FullStackWebApi\\PROEVENTOS\\Front\\ProEventos-App\\src\\app\\eventos\\eventos.component.ts"],"sourcesContent":["\r\nimport { Component, TemplateRef } from '@angular/core';\r\nimport { Evento } from 'models/Evento';\r\nimport { BsComponentRef } from 'ngx-bootstrap/component-loader';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { EventoService } from '../services/evento.service';\r\n\r\n@Component({\r\n  selector: 'app-eventos',\r\n  templateUrl: './eventos.component.html',\r\n  styleUrls: ['./eventos.component.scss'],\r\n\r\n})\r\nexport class EventosComponent  {\r\n  modalRef?: BsModalRef | null;\r\n  public eventos: Evento[] = [];\r\n  public eventosFltrados: Evento[] = [];\r\n  widthImg = 150;\r\n  marginImg = 2;\r\n  exibirImagem = true;\r\n  private filtroListado = '';\r\n\r\n\r\n  public get filtroLitsta(){\r\n     return this.filtroListado;\r\n  }\r\n\r\n  public set filtroLitsta(value: string){\r\n     this.filtroListado = value;\r\n     this.eventosFltrados = this.filtroLitsta ? this.filtroEventos(this.filtroLitsta) : this.eventos;\r\n  }\r\n\r\n  public filtroEventos(filtroPor: string): Evento[]{\r\n     filtroPor = filtroPor.toLocaleLowerCase();\r\n     return this.eventos.filter(\r\n         (evento: {tema:string; local: string})  => evento.tema.toLocaleLowerCase().indexOf(filtroPor) !== -1 ||\r\n         evento.local.toLocaleLowerCase().indexOf(filtroPor) !== -1\r\n\r\n     );\r\n  };\r\n\r\n  constructor(private eventoService: EventoService,\r\n    private modalService: BsModalService,\r\n    private toastr: ToastrService,\r\n    private spinner: NgxSpinnerService) { }\r\n\r\n\r\n  public alterarImagem(): void {\r\n     this.exibirImagem = !this.exibirImagem;\r\n  }\r\n\r\n  public ngOnInit() : void{\r\n    this.spinner.show();\r\n    this.getEventos();\r\n\r\n   /* setTimeout(() => {\r\n      this.spinner.hide();\r\n\r\n\r\n    }, 5000); */\r\n  }\r\n\r\n\r\n // public getEventos(): void{\r\n   // this.eventoService.getEventos().subscribe(\r\n     //   (eventosResp: Evento[]) => {\r\n       //   this.eventos = eventosResp\r\n        //  this.eventosFltrados = this.eventos;\r\n\r\n       // },\r\n       // error => console.log(error)\r\n    //);\r\n  //}\r\n\r\n  public getEventos(): void{\r\n   /* const observer = {\r\n      next:(eventos: Evento[]) => {\r\n        this.eventos = eventos;\r\n        this.eventosFltrados =this.eventos;\r\n      },\r\n      error: (error: any) => {\r\n        this.spinner.hide();\r\n        this.toastr.error('Erro ao carregar os eventos', 'Error!');\r\n      },\r\n     // complete: () => this.spinner.hide()\r\n    };\r\n\r\n    */\r\n\r\n    this.eventoService.getEventos().subscribe({\r\n      next:(eventos: Evento[]) => {\r\n        this.eventos = eventos;\r\n        this.eventosFltrados =this.eventos;\r\n      },\r\n      error: (error: any) => {\r\n        this.spinner.hide();\r\n        this.toastr.error('Erro ao carregar os eventos', 'Error!');\r\n      },\r\n       complete: () => this.spinner.hide()\r\n    });\r\n  }\r\n\r\n  openModal(template: TemplateRef<any>): void {\r\n    this.modalRef = this.modalService.show(template, { class: 'modal-lg' });\r\n\r\n  }\r\n\r\n  confirma() {\r\n     this.modalRef?.hide();\r\n     this.toastr.success('Evento deletado com sucesso.', 'Deletado');\r\n  }\r\n\r\n  decline(): void {\r\n    this.modalRef?.hide();\r\n }\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}