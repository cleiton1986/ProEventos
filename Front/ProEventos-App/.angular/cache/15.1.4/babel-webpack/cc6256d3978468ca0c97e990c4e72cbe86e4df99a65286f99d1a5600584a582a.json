{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class EventoService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'https://localhost:001/api/eventos';\n  }\n  getEventos() {\n    return this.http.get(this.baseUrl);\n  }\n  getEventosByTema(tema) {\n    return this.http.get(`${this.baseUrl}/${tema}/tema`);\n  }\n  getEventosById(id) {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n}\nEventoService.ɵfac = function EventoService_Factory(t) {\n  return new (t || EventoService)(i0.ɵɵinject(i1.HttpClient));\n};\nEventoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: EventoService,\n  factory: EventoService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAWA,OAAM,MAAOA,aAAa;EAGxBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,YAAO,GAAG,mCAAmC;EAEL;EAEjCC,UAAU;IACf,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAW,IAAI,CAACC,OAAO,CAAC;EAC9C;EAEOC,gBAAgB,CAACC,IAAY;IAClC,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAW,GAAG,IAAI,CAACC,OAAO,IAAIE,IAAI,OAAO,CAAC;EAChE;EAEOC,cAAc,CAACC,EAAU;IAC9B,OAAO,IAAI,CAACP,IAAI,CAACE,GAAG,CAAS,GAAG,IAAI,CAACC,OAAO,IAAII,EAAE,EAAE,CAAC;EACvD;;AAfWT,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAU,SAAbV,aAAa;EAAAW,YAHZ;AAAM","names":["EventoService","constructor","http","getEventos","get","baseUrl","getEventosByTema","tema","getEventosById","id","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Cleiton Cristovam\\Desktop\\Cursos Udemy\\FullStackWebApi\\PROEVENTOS\\Front\\ProEventos-App\\src\\app\\services\\evento.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Evento } from 'models/Evento';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class EventoService {\n  baseUrl = 'https://localhost:001/api/eventos';\n\n  constructor(private http: HttpClient) { }\n\n  public getEventos(): Observable<Evento[]>{\n    return this.http.get<Evento[]>(this.baseUrl);\n  }\n\n  public getEventosByTema(tema: string): Observable<Evento[]>{\n    return this.http.get<Evento[]>(`${this.baseUrl}/${tema}/tema`);\n  }\n\n  public getEventosById(id: number): Observable<Evento>{\n    return this.http.get<Evento>(`${this.baseUrl}/${id}`);\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}